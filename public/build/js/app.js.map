{"version":3,"sources":["app-test.js","app.js","config.js","parser-testing.js","modules/lodash.js","services/apiService.js","services/highlighter-test.js"],"names":[],"mappingsrGA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('app-test', ['ngAnimate', 'ngTouch', 'ui.grid']);\n \napp.controller('MainCtrl', ['$scope', '$http', 'uiGridConstants', function ($scope, $http, uiGridConstants) {\n  $scope.columns = [{ field: 'name' }, { field: 'gender' }];\n  $scope.gridOptions = {\n    enableSorting: true,\n    columnDefs: $scope.columns,\n    onRegisterApi: function(gridApi) {\n      $scope.gridApi = gridApi;\n    }\n  };\n  \n  $scope.remove = function() {\n    $scope.columns.splice($scope.columns.length-1, 1);\n  }\n  \n  $scope.add = function() {\n    $scope.columns.push({ field: 'company', enableSorting: false });\n  }\n \n  $scope.splice = function() {\n    $scope.columns.splice(1, 0, { field: 'company', enableSorting: false });\n  }\n \n  $scope.unsplice = function() {\n    $scope.columns.splice(1, 1);\n  }\n  \n  $scope.toggleDisplayName = function() {\n    if( $scope.columns[1].displayName === 'GENDER' ){\n      $scope.columns[1].displayName = 'Gender';\n    } else {\n      $scope.columns[1].displayName = 'GENDER';\n    }\n    $scope.gridApi.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n  }\n  \n  $scope.toggleVisible = function() {\n    $scope.columns[0].visible = !($scope.columns[0].visible || $scope.columns[0].visible === undefined);\n    $scope.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n  }\n \n  $http.get('http://ui-grid.info/data/100.json')\n    .success(function(data) {\n      $scope.gridOptions.data = data;\n    });\n}]);","var app = angular.module('soqlTool', ['ngAnimate', 'ngTouch', 'ngSanitize', 'ngCsv']);\n\nvar queryCtrl = app.controller('QueryCtrl', ['$scope','$http', '$filter', function($scope, $http, $filter) {\n  $scope.query = 'SELECT Id, Name, BillingCity FROM Account limit 10';\n  $scope.fileName = '';\n\n  $scope.columns = [];\n  $scope.rows = [];\n\n  $scope.sortType = '';\n  $scope.sortReverse = false;\n\n  $scope.request = function(query) {\n    $http.get('api/query/'+$scope.query)\n    // $http.get('api/testData')\n      .success(function(data) {\n        for(i = 0; i < data.records.length; i++){\n          delete data.records[i].attributes;\n        }\n        $scope.rows = data.records;\n\n        if(data.records.length !== 0){\n          $scope.columns = [];\n          angular.forEach(data.records[0], function(value, key) {\n            $scope.columns.push(key);\n          });\n        }\n    });\n  };\n\n  $scope.getExportData = function() {\n    var rows = [];\n    // rows[0] = $scope.columns;\n\n    for (var i = 0, len = $scope.rows.length; i < len; i++) {\n      if(i ==0)\n      angular.forEach(rows, function(value, key) {\n        rows\n      });\n    }\n\n\n    return rows;\n  };\n\n  $scope.getHeader = function() {\n    return $scope.columns;\n  }\n\n  $scope.order = function(sortType) {\n    $scope.sortType = sortType;\n    $scope.sortReverse = ($scope.sortType === sortType) ? !$scope.sortReverse : false;\n    $scope.rows = $filter('orderBy')($scope.rows, sortType, $scope.sortReverse);\n  };\n\n  $scope.renderUpCaret = function(column) {\n    return $scope.sortType === column && !$scope.sortReverse;\n  };\n\n  $scope.renderDownCaret = function(column) {\n    return $scope.sortType === column && $scope.sortReverse;\n  };\n\n  var renderQueryObj = function() {\n    console.log($scope.queryObject);\n    $scope.query = $scope.queryObject.type;\n    $scope.query += \" \";\n    for(i = 0; i < $scope.queryObject.fields.length; i++){\n      if(i === $scope.queryObject.fields.length - 1){\n        $scope.query += $scope.queryObject.fields[i];\n      } else {\n        $scope.query += $scope.queryObject.fields[i];\n        $scope.query += \", \";\n      }\n    }\n    $scope.query += \"\\nFROM \";\n    $scope.query += $scope.queryObject.sobject;\n    if($scope.queryObject.filters.length > 0){\n      for(i = 0; i < $scope.queryObject.filters.length; i++){\n        if(i === 0){\n          $scope.query += \"\\nWHERE \";\n        } else {\n          $scope.query += \"\\n\\tAND \";\n        }\n        $scope.query += $scope.queryObject.filters[i].field;\n        $scope.query += \" \";\n        $scope.query += $scope.queryObject.filters[i].operator;\n        $scope.query += \" \\'\";\n        $scope.query += $scope.queryObject.filters[i].value;\n        $scope.query += \"\\'\";\n      }\n    }\n  };\n}]);\n\nvar homeCtrl = app.controller('HomeCtrl', ['$scope', function($scope) {\n  $scope.url = 'https://soql.192.168.33.10.xip.io';\n  $scope.title = 'SOQuirreL';\n  $scope.description = 'A SOQL tool that is really swell!';\n  $scope.hashtag = '#SOQuirreL';\n  $scope.summary = 'A SOQL tool that is really swell!';\n}]);","","var app = angular.module('parser-testing', []);\n \napp.controller('MainCtrl', ['$scope', function ($scope) {\n  $scope.queryObject = {\n    type: \"SELECT\",\n    fields: [\n        \"Id\",\n        \"Name\"],\n    sobject: \"Account\",\n    availableFields: [],\n    filters: [\n      {field:\"BillingCity\",operator:\"=\",value:\"Boston\"},\n      {field:\"Name\",operator:\"=\",value:\"Matt\"}]\n  };\n\n  $scope.query = '';\n\n  var renderQueryObj = function(){\n    console.log($scope.queryObject);\n    $scope.query = $scope.queryObject.type;\n    $scope.query += \" \";\n    for(i = 0; i < $scope.queryObject.fields.length; i++){\n      if(i === $scope.queryObject.fields.length - 1){\n        $scope.query += $scope.queryObject.fields[i];\n      } else {\n        $scope.query += $scope.queryObject.fields[i];\n        $scope.query += \", \";\n      }\n    }\n    $scope.query += \"\\nFROM \";\n    $scope.query += $scope.queryObject.sobject;\n    if($scope.queryObject.filters.length > 0){\n      for(i = 0; i < $scope.queryObject.filters.length; i++){\n        if(i === 0){\n          $scope.query += \"\\nWHERE \";\n        } else {\n          $scope.query += \"\\n\\tAND \";\n        }\n        $scope.query += $scope.queryObject.filters[i].field;\n        $scope.query += \" \";\n        $scope.query += $scope.queryObject.filters[i].operator;\n        $scope.query += \" \\'\";\n        $scope.query += $scope.queryObject.filters[i].value;\n        $scope.query += \"\\'\";\n      }\n    }\n  };\n\n  renderQueryObj();\n\n}]);","var lodash = angular.module('lodash', []);\nlodash.factory('_', function() {\n  return window._;\n});","app.service('apiService', function ($http, $q) {\n\n  this.get = function(route){\n\n    var defer = $q.defer();\n\n    $http.get(route).\n      success(function(data, status, headers, config) {\n        defer.resolve(data);\n      }).\n      error(function(data, status, headers, config) {\n        defer.reject(status + data);\n      });\n\n    return defer.promise;\n\n  };\n\n});","var app = angular.module('parser-testing', []);\n \napp.controller('MainCtrl', ['$scope', function ($scope) {\n  $scope.query = '';\n\n  $scope.highlight = function(haystack, needle) {\n      if(!needle) {\n          return $sce.trustAsHtml(haystack);\n      }\n      return $sce.trustAsHtml(haystack.replace(new RegExp(needle, \"gi\"), function(match) {\n          return '<span class=\"highlightedText\">' + match + '</span>';\n      }));\n  };\n\n}]);"],"sourceRoot":"/source/"}