{"version":3,"sources":["app.js","config.js","modules/lodash.js","services/apiService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;ACAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('soqlTool', ['ui.grid','lodash']);\n\nvar queryCtrl = app.controller('QueryCtrl', ['$scope','apiService','uiGridConstants',function($scope,apiService,uiGridConstants)\n{\n  $scope.columns = [{ field: 'Id' }, { field: 'Name' }];\n  $scope.data = [];\n  $scope.query = 'SELECT Id, Name, BillingCity FROM Account limit 10';\n  $scope.hideGrid = true;\n\n  $scope.gridOptions = {\n    data: 'data',\n    // columnDefs: $scope.columns,\n    enableSorting: false,\n    onRegisterApi: function(gridApi) {\n      $scope.gridApi = gridApi;\n    }\n  };\n\n  $scope.request = function(query)\n  {\n    $scope.hideGrid = false;\n    var promise = apiService.get('api/query/'+$scope.query);\n    promise.then(function(data)\n    {\n      for(i = 0; i < data.records.length; i++){\n        delete data.records[i].attributes;\n      }\n\n      if(data.records.length !== 0){\n        var newCols = [];\n        angular.forEach(data.records[0], function(value, key) {\n          // newCols.push({field : key});\n          // $scope.gridApi.core.remov({name:key});\n        });\n        // $scope.columns = newCols;\n        console.log($scope.columns);\n      }\n\n      $scope.gridOptions.data.concat(data.records);\n\n      $scope.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n\n      // console.log(uiGridConstants.dataChange.COLUMN);\n\n      // ui.grid.core.queueGridRefresh();\n\n      console.log(data.records);\n    });\n\n  };\n\n\n}]);","","var lodash = angular.module('lodash', []);\nlodash.factory('_', function() {\n  return window._;\n});","app.service('apiService', function ($http, $q) {\n\n  this.get = function(route){\n\n    var defer = $q.defer();\n\n    $http.get(route).\n      success(function(data, status, headers, config) {\n        defer.resolve(data);\n      }).\n      error(function(data, status, headers, config) {\n        defer.reject(status + data);\n      });\n\n    return defer.promise;\n\n  };\n\n});"],"sourceRoot":"/source/"}