{"version":3,"sources":["app-test.js","app.js","config.js","modules/lodash.js","services/apiService.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var app = angular.module('app-test', ['ngAnimate', 'ngTouch', 'ui.grid']);\n \napp.controller('MainCtrl', ['$scope', '$http', 'uiGridConstants', function ($scope, $http, uiGridConstants) {\n  $scope.columns = [{ field: 'name' }, { field: 'gender' }];\n  $scope.gridOptions = {\n    enableSorting: true,\n    columnDefs: $scope.columns,\n    onRegisterApi: function(gridApi) {\n      $scope.gridApi = gridApi;\n    }\n  };\n  \n  $scope.remove = function() {\n    $scope.columns.splice($scope.columns.length-1, 1);\n  }\n  \n  $scope.add = function() {\n    $scope.columns.push({ field: 'company', enableSorting: false });\n  }\n \n  $scope.splice = function() {\n    $scope.columns.splice(1, 0, { field: 'company', enableSorting: false });\n  }\n \n  $scope.unsplice = function() {\n    $scope.columns.splice(1, 1);\n  }\n  \n  $scope.toggleDisplayName = function() {\n    if( $scope.columns[1].displayName === 'GENDER' ){\n      $scope.columns[1].displayName = 'Gender';\n    } else {\n      $scope.columns[1].displayName = 'GENDER';\n    }\n    $scope.gridApi.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n  }\n  \n  $scope.toggleVisible = function() {\n    $scope.columns[0].visible = !($scope.columns[0].visible || $scope.columns[0].visible === undefined);\n    $scope.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n  }\n \n  $http.get('http://ui-grid.info/data/100.json')\n    .success(function(data) {\n      $scope.gridOptions.data = data;\n    });\n}]);","var app = angular.module('soqlTool', ['ngTouch', 'ui.grid', 'lodash']);\n\nvar queryCtrl = app.controller('QueryCtrl', ['$scope','$http','uiGridConstants', function($scope, $http, uiGridConstants)\n{\n  $scope.query = 'SELECT Id, Name, BillingCity FROM Account limit 10';\n  $scope.hideGrid = true;\n\n  $scope.gridOptions = {\n    enableSorting: true,\n    onRegisterApi: function(gridApi) {\n      $scope.gridApi = gridApi;\n    }\n  };\n\n  $scope.gridOptions = {\n    enableGridMenu: true,\n    enableSelectAll: true,\n    exporterCsvFilename: 'query.csv',\n    exporterPdfDefaultStyle: {fontSize: 9},\n    exporterPdfTableStyle: {margin: [30, 30, 30, 30]},\n    exporterPdfTableHeaderStyle: {fontSize: 10, bold: true, italics: true, color: 'red'},\n    exporterPdfHeader: { text: \"My Header\", style: 'headerStyle' },\n    exporterPdfFooter: function ( currentPage, pageCount ) {\n      return { text: currentPage.toString() + ' of ' + pageCount.toString(), style: 'footerStyle' };\n    },\n    exporterPdfCustomFormatter: function ( docDefinition ) {\n      docDefinition.styles.headerStyle = { fontSize: 22, bold: true };\n      docDefinition.styles.footerStyle = { fontSize: 10, bold: true };\n      return docDefinition;\n    },\n    exporterPdfOrientation: 'portrait',\n    exporterPdfPageSize: 'LETTER',\n    exporterPdfMaxGridWidth: 500,\n    exporterCsvLinkElement: angular.element(document.querySelectorAll(\".custom-csv-link-location\")),\n    onRegisterApi: function(gridApi){\n      $scope.gridApi = gridApi;\n    }\n  };\n\n  $scope.request = function(query)\n  {\n    $http.get('api/query/'+$scope.query)\n    // $http.get('api/testData')\n      .success(function(data) {\n        for(i = 0; i < data.records.length; i++){\n          delete data.records[i].attributes;\n        }\n        $scope.gridOptions.data = data.records;\n\n        if(data.records.length !== 0){\n          $scope.columns = [];\n          angular.forEach(data.records[0], function(value, key) {\n            $scope.columns.push({field : key});\n          });\n          $scope.gridOptions.columnDefs = $scope.columns;\n        }\n        $scope.hideGrid = false;\n  });\n  };\n\n}]);","","var lodash = angular.module('lodash', []);\nlodash.factory('_', function() {\n  return window._;\n});","app.service('apiService', function ($http, $q) {\n\n  this.get = function(route){\n\n    var defer = $q.defer();\n\n    $http.get(route).\n      success(function(data, status, headers, config) {\n        defer.resolve(data);\n      }).\n      error(function(data, status, headers, config) {\n        defer.reject(status + data);\n      });\n\n    return defer.promise;\n\n  };\n\n});"],"sourceRoot":"/source/"}